<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ user_data.username }} recommends...</title>
    <link rel="stylesheet" href="static/style.css">
</head>
<body {% if is_editing %} onload="onload()" {% endif %}>
    <div id="content">
        <h1>Recommends</h1>
        <h2 id="user-recommends">{{ user_data.username }} recommends...</h2>
        {% if is_editing %}
        <button id="save-button" onclick="sendData()">Save</button>
        {% elif editable %}
        <a href="/edit"><button id="edit-button">Edit</button></a>
        {% endif %}

        <div id="recommendation-table-div">
            {% for category in user_data.recommendations %}
            <table class="recommendation-table">
                <tr><th class="rec-table-category" {% if is_editing %} contenteditable="true" spellcheck="false" {% endif %}>{{ category }}</th></tr>
                {% for recommendation in user_data.recommendations[category] %}
                <tr><td class="rec-table-item" {% if is_editing %} contenteditable="true" spellcheck="false" {% endif %}>{{ recommendation }}</td></tr>
                {% endfor %}
            </table>
            {% endfor %}
        </div>
        {% if is_editing %}
        <button id="add-table-button" onclick="addTable()">Add List</button>
        {% endif %}
    </div>

    {% if is_editing %}
    <script>
        function onload()
        {
            assignTableIds()
            reassignTableEventListeners()
        }

        function onFieldEdit (event)
        {
            if (event.code === "Enter" || event.code === "NumpadEnter" || event.code === "ArrowDown")
            {
                event.preventDefault()
                if (event.target.className === "rec-table-category")
                {
                    let nextElement = document.getElementById("rec-table-item-index=" + event.target.id.split("=")[1] + ",0")
                    nextElement.focus()
                    cursorToEnd(nextElement)
                }
                else if (event.target.className === "rec-table-item")
                {
                    let nextId = event.target.id.split(",")[0] + "," + (parseInt(event.target.id.split(",")[1]) + 1)
                    let nextElement = document.getElementById(nextId)
                    if (nextElement === null)
                    {
                        event.target.parentElement.parentElement.innerHTML += '<tr><td class="rec-table-item" contenteditable="true" spellcheck="false"></td></tr>'
                        assignTableIds()
                        reassignTableEventListeners()
                        nextElement = document.getElementById(nextId)
                        nextElement.addEventListener("keydown", onFieldEdit)
                    }
                    nextElement.focus()
                    cursorToEnd(nextElement)
                }
            }
            else if (event.code === "ArrowUp" || (event.code === "Backspace" && (event.target.innerHTML === "" || event.target.innerHTML === "<br>")))
            {
                event.preventDefault()
                if (event.code === "Backspace" && event.target.className === "rec-table-category" && event.target.parentElement.parentElement.parentElement.getElementsByClassName("rec-table-item").length === 0)
                {
                    // Delete an empty table
                    event.target.removeEventListener("keydown", onFieldEdit)
                    event.target.parentElement.parentElement.parentElement.remove()
                    assignTableIds()
                    reassignTableEventListeners()
                }
                else if (event.target.className === "rec-table-item")
                {
                    let nextId = event.target.id.split(",")[0] + "," + (parseInt(event.target.id.split(",")[1]) - 1)
                    let nextElement = document.getElementById(nextId)
                    if (nextElement === null)
                    {
                        nextElement = document.getElementById("rec-table-category-index=" + event.target.id.split("=")[1].split(",")[0])
                    }
                    nextElement.focus()
                    cursorToEnd(nextElement)

                    // Delete an empty row
                    if (event.code === "Backspace" && (event.target.innerHTML === "" || event.target.innerHTML === "<br>"))
                    {
                        event.target.removeEventListener("keydown", onFieldEdit)
                        event.target.parentElement.remove()
                        assignTableIds()
                        reassignTableEventListeners()
                    }
                }
            }
        }

        function addTable ()
        {
            document.getElementById("recommendation-table-div").innerHTML += '' +
            '<table class="recommendation-table">' +
                '<tr><th class="rec-table-category" spellcheck="false" contenteditable="true">(Category)</th></tr>' +
                '<tr><td class="rec-table-item" spellcheck="false" contenteditable="true">(Recommendation)</td></tr>' +
            '</table>'
            assignTableIds()
            reassignTableEventListeners()
            
            let newestHeader = document.getElementsByClassName("rec-table-category")[document.getElementsByClassName("rec-table-category").length - 1]
            newestHeader.focus()
            cursorToEnd(newestHeader)
        }

        function cursorToEnd (element)
        {
            // Move cursor to the end of the text in the row
            let range = document.createRange()
            let select = window.getSelection()
            range.selectNodeContents(element)
            range.collapse(false)
            select.removeAllRanges()
            select.addRange(range)
        }

        function assignTableIds ()
        {
            for (let tableIndex = 0; tableIndex < document.getElementsByClassName("recommendation-table").length; tableIndex++)
            {
                let table = document.getElementsByClassName("recommendation-table")[tableIndex]
                table.id = "rec-table-index=" + tableIndex
                table.getElementsByClassName("rec-table-category")[0].id = "rec-table-category-index=" + tableIndex

                for (let itemIndex = 0; itemIndex < table.getElementsByClassName("rec-table-item").length; itemIndex++)
                {
                    table.getElementsByClassName("rec-table-item")[itemIndex].id = "rec-table-item-index=" + tableIndex + "," + itemIndex
                }
            }
        }

        function reassignTableEventListeners ()
        {
            for (let field of document.getElementsByClassName("rec-table-category"))
            {
                field.removeEventListener("keydown", onFieldEdit)
                field.addEventListener("keydown", onFieldEdit)
            }
            for (let field of document.getElementsByClassName("rec-table-item"))
            {
                field.removeEventListener("keydown", onFieldEdit)
                field.addEventListener("keydown", onFieldEdit)
            }
        }

        function sendData ()
        {
            let data = {
                // Category names are stored as a list
                // A dictionary could not be used because keys may overlap (categories can have the same name)
                "recommendationCategories": [],
                // Each element in recommendations is a list that corresponds to the category at the element's index
                // For example, the list at recommendations[0] is for the category recommendationCategories[0]
                "recommendations": []
            }

            for (let table of document.getElementsByClassName("recommendation-table"))
            {
                let category = table.getElementsByClassName("rec-table-category")[0].innerHTML
                // If the table does not have both a blank category and no recommendations
                if (!((category === "" || category == "<br>") && table.getElementsByClassName("rec-table-item").length === 0))
                {
                    if (category === "<br>" || category === "")
                    {
                        category = ""
                    }

                    let recommendations = []
                    for (let recommendation of table.getElementsByClassName("rec-table-item"))
                    {
                        recommendationStr = recommendation.innerHTML
                        if (recommendationStr === "<br>")
                        {
                            recommendationStr = ""
                        }
                        recommendations.push(recommendationStr)
                    }
                    data["recommendationCategories"].push(category)
                    data["recommendations"].push(recommendations)
                }
            }

            // Send data to the server
            fetch("/edit", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(data)
            })
            .then(response => {
                window.location.href = "/{{ user_data.username }}"
            })
        }
    </script>
    {% endif %}
</body>
</html>
